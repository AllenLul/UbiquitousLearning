<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="just.learn.mapper.PostMapper" >
  <resultMap id="BaseResultMap" type="just.learn.entity.Post" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="can_reply" property="canReply" jdbcType="CHAR" />
    <result column="is_top" property="isTop" jdbcType="CHAR" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, detail, create_time, can_reply, is_top, reply_id, user_id
  </sql>
  <select id="selectLimitObjects" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from post
    LIMIT #{startRow} , #{pageSize}
  </select>
  <select id="countByCondition" resultType="java.lang.Integer"  >
    select
    COUNT(*)
    from post
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from post
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from post
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="just.learn.entity.Post" >
    insert into post (id, name, detail, 
      create_time, can_reply, is_top, 
      reply_id, user_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{canReply,jdbcType=CHAR}, #{isTop,jdbcType=CHAR}, 
      #{replyId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="just.learn.entity.Post" >
    insert into post
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="canReply != null" >
        can_reply,
      </if>
      <if test="isTop != null" >
        is_top,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="canReply != null" >
        #{canReply,jdbcType=CHAR},
      </if>
      <if test="isTop != null" >
        #{isTop,jdbcType=CHAR},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="just.learn.entity.Post" >
    update post
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="canReply != null" >
        can_reply = #{canReply,jdbcType=CHAR},
      </if>
      <if test="isTop != null" >
        is_top = #{isTop,jdbcType=CHAR},
      </if>
      <if test="replyId != null" >
        reply_id = #{replyId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="just.learn.entity.Post" >
    update post
    set name = #{name,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      can_reply = #{canReply,jdbcType=CHAR},
      is_top = #{isTop,jdbcType=CHAR},
      reply_id = #{replyId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>